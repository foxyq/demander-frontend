'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _reactTransformHmr3 = require('react-transform-hmr');

var _reactTransformHmr4 = _interopRequireDefault(_reactTransformHmr3);

var _redboxReact2 = require('redbox-react');

var _redboxReact3 = _interopRequireDefault(_redboxReact2);

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _reactTransformCatchErrors3 = require('react-transform-catch-errors');

var _reactTransformCatchErrors4 = _interopRequireDefault(_reactTransformCatchErrors3);

var _dec, _dec2, _class, _class2, _temp2;

var _reactRouter = require('react-router');

var _reactRedux = require('react-redux');

var _reduxForm = require('redux-form');

var _demand = require('models/demand');

var _fields = require('components/fields');

var _demands = require('redux/modules/api/demands');

var _companies = require('redux/modules/api/companies');

var _demand2 = require('./demand.validation');

var _demand3 = _interopRequireDefault(_demand2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _components = {
  Demand: {
    displayName: 'Demand'
  }
};

var _reactTransformCatchErrors2 = (0, _reactTransformCatchErrors4.default)({
  filename: '/Users/pavel/Development/demander/demander-frontend/src/containers/forms/Demand/Demand.js',
  components: _components,
  locals: [],
  imports: [_react3.default, _redboxReact3.default]
});

var _reactTransformHmr2 = (0, _reactTransformHmr4.default)({
  filename: '/Users/pavel/Development/demander/demander-frontend/src/containers/forms/Demand/Demand.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _reactTransformCatchErrors2(_reactTransformHmr2(Component, id), id);
  };
}

var Demand = _wrapComponent('Demand')((_dec = (0, _reactRedux.connect)(function (_ref, _ref2) {
  var api = _ref.api;
  var params = _ref2.params;
  return {
    isSubmitting: api.demands.createDemand.isSubmitting,
    initialValues: params.id !== 'new' && api.demands.getDemand.data,
    companies: api.companies.getCompanies.data
  };
}, { createDemand: _demands.createDemand, getDemands: _demands.getDemands, getDemand: _demands.getDemand, editDemand: _demands.editDemand, getCompanies: _companies.getCompanies }), _dec2 = (0, _reduxForm.reduxForm)({
  form: 'Demand',
  enableReinitialize: true,
  validate: _demand3.default
}), _dec(_class = _dec2(_class = (_temp2 = _class2 = function (_Component) {
  (0, _inherits3.default)(Demand, _Component);

  function Demand() {
    var _ref3;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Demand);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref3 = Demand.__proto__ || Object.getPrototypeOf(Demand)).call.apply(_ref3, [this].concat(args))), _this), _this.state = {
      error: null
    }, _this.handleSubmit = function (model) {
      var demandId = _this.props.params.id;
      var isEditing = demandId !== 'new';

      var action = isEditing ? _this.props.editDemand : _this.props.createDemand;
      var values = (0, _demand.schema)(model);

      action(values, demandId).then(_this.handleSuccess).catch(_this.handleError);
    }, _this.handleSuccess = function () {
      _this.props.getDemands();
      _reactRouter.browserHistory.goBack();
      // browserHistory.push('/demands')
    }, _this.handleError = function (error) {
      return _this.setState({ error: error });
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(Demand, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var demandId = this.props.params.id;
      var isEditing = demandId !== 'new';

      this.props.getCompanies();

      if (isEditing) {
        this.props.getDemand(demandId);
      }

      console.log('initialValue: ', this.initialValues);
      // console.log(this.props.initialValues.company._id)

      // this.props.companies.map(company => {
      //   console.log(company._id)
      // })
      // console.log(this.props.companies)
      // console.log(this.props.reformattedOptions)
      // console.log(this.props.reformattedOptions)

      // const pomocna = this.props.companies.map(company => {
      //   const rObj = {}
      //
      //   rObj.value = company._id
      //   rObj.label = company.company_name
      //   return rObj
      // })

      // this.props.reformattedOptions = pomocna

      // console.log('toto je pomocna: ', pomocna)
      // console.log('toto je pomocna 2: ', this.props.reformattedOptions)
    }

    // This is the actual submit method called on successful form submit

  }, {
    key: 'render',
    value: function render() {
      // const { handleSubmit, isSubmitting, companies } = this.props
      var _props = this.props,
          handleSubmit = _props.handleSubmit,
          isSubmitting = _props.isSubmitting;
      var error = this.state.error;


      return _react3.default.createElement(
        'form',
        { onSubmit: handleSubmit(this.handleSubmit) },
        _react3.default.createElement(_fields.Input, { label: 'Demand title', name: 'title' }),
        _react3.default.createElement(_fields.TextArea, { label: 'Goal', name: 'goal', rows: '5' }),
        _react3.default.createElement(_fields.TextArea, { label: 'Input', name: 'input' }),
        _react3.default.createElement(_fields.TextArea, { label: 'Output', name: 'output' }),
        _react3.default.createElement(_fields.TextArea, { label: 'Timeplan', name: 'timeplan' }),
        _react3.default.createElement(_fields.Input, { label: 'Budget', name: 'budget' }),
        _react3.default.createElement(_fields.TextArea, { label: 'Description', name: 'description' }),
        _react3.default.createElement(_fields.Input, { label: 'Responsible person', name: 'responsible_person' }),
        _react3.default.createElement(_fields.SimpleSelect, {
          label: 'Company',
          name: 'company',
          value: null
          // options={companies}
          , options: this.props.companies.map(function (company) {
            var rObj = {};

            rObj.value = company._id;
            rObj.label = company.company_name;
            return rObj;
          })
        }),
        _react3.default.createElement('input', { type: 'submit' }),
        isSubmitting && _react3.default.createElement(
          'div',
          null,
          'Submitting...'
        ),
        error && _react3.default.createElement(
          'div',
          null,
          error
        )
      );
    }
  }]);
  return Demand;
}(_react2.Component), _class2.propTypes = {
  handleSubmit: _react2.PropTypes.func.isRequired,
  isSubmitting: _react2.PropTypes.bool,
  getDemands: _react2.PropTypes.func.isRequired,
  getDemand: _react2.PropTypes.func.isRequired,
  editDemand: _react2.PropTypes.func.isRequired,
  createDemand: _react2.PropTypes.func.isRequired,
  getCompanies: _react2.PropTypes.func.isRequired,
  companies: _react2.PropTypes.array
}, _temp2)) || _class) || _class));

exports.default = Demand;
module.exports = exports['default'];